@model LMS.ViewModels.BookFormViewModel
@{
    ViewBag.Title = "Edit Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    // if i rename the controller or the action i don't have to do it here too
    var action = nameof(LMS.Controllers.BooksController.Update);
    var controller = nameof(LMS.Models.Book) + "s";
}

<h2>Edit Book</h2>

@using (Html.BeginForm(action, controller))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Title)
        @Html.TextBoxFor(m => m.Book.Title, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Book.Title, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Authors)
        @Html.TextBoxFor(m => m.Book.Authors, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Isbn)
        @Html.TextBoxFor(m => m.Book.Isbn, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Price)
        @Html.TextBoxFor(m => m.Book.Price, new { @class = "form-control", type = "number" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.NumberInStock)
        @Html.TextBoxFor(m => m.Book.NumberInStock, new { @class = "form-control", type = "number" })
        @Html.ValidationMessageFor(m => m.Book.NumberInStock, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Publisher)
        @Html.TextBoxFor(m => m.Book.Publisher, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.ReleaseYear)
        @Html.TextBoxFor(m => m.Book.ReleaseYear, new { @class = "form-control", type = "number" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Source)
        @Html.TextBoxFor(m => m.Book.Source, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.ClassCode)
        @Html.TextBoxFor(m => m.Book.ClassCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Book.ClassCode, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Class)
        @Html.DropDownListFor(m => m.Book.ClassId, new SelectList(Model.Classes, "Id", "Name", Model.Book.ClassId), new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Book.ClassId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Book.Language)
        @Html.DropDownListFor(m => m.Book.LanguageId, new SelectList(Model.Languages, "Id", "Name", Model.Book.LanguageId), new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Book.LanguageId, "", new { @class = "text-danger" })
    </div>
    @Html.ValidationSummary(true, "Please Fix These Errors", new { @class="text-danger"})
    <button type="submit" class="btn btn-primary">Save</button>
    @Html.HiddenFor(m => m.Book.Id)
    @Html.HiddenFor(m => m.Book.DateAdded)
    @Html.AntiForgeryToken()
}
@Html.ActionLink("Back To List", "Index")
